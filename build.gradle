apply plugin: 'java'
apply plugin: 'maven'

group = 'com.wishlist'
version = 'dev'

description = """Backend for the Wishlist Web App"""


sourceCompatibility = 1.5
targetCompatibility = 1.5
tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

buildscript {
  repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.41"
    classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
    classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    classpath "de.sebastianboegl.gradle.plugins:shadow-log4j-transformer:2.1.1"
  }
}

apply plugin: 'kotlin'
apply plugin: "io.spring.dependency-management"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "de.sebastianboegl.shadow.transformer.log4j"

repositories {
  maven { url "http://repo.maven.apache.org/maven2" }
  jcenter()
}

// If requiring AWS JDK, uncomment the dependencyManagement to use the bill of materials
//   https://aws.amazon.com/blogs/developer/managing-dependencies-with-aws-sdk-for-java-bill-of-materials-module-bom/
//dependencyManagement {
//    imports {
//        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.206'
//    }
//}

dependencies {
  compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.41'

  compile group: 'com.amazonaws', name: 'aws-lambda-java-core', version:'1.1.0'
  compile group: 'com.amazonaws', name: 'aws-lambda-java-log4j2', version:'1.0.0'
  compile group: 'com.amazonaws', name: 'aws-lambda-java-events', version:'2.0.1'

  compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.8.5'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.8.5'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.8.5'
  compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version:'2.9.0'

  compile 'org.jetbrains.exposed:exposed:0.14.1'
  compile "org.postgresql:postgresql:42.2.2"
}

task deploy(type: Exec, dependsOn: 'shadowJar') {
  commandLine 'serverless', 'deploy'
}

task deployFunction(type: Exec, dependsOn:  'shadowJar') {
  commandLine 'sls', 'deploy', 'function', '-f', 'CreateWish'
}


